---
title: "Predictive Maintenance - Part 1"
description: "My second post - so be nice :P"
author: "Bernardo Cruz"
date: "June, 9 2023"
categories:
  - predictive maintenance 
  - unsupervised learning
  - mechanical engineering
  - guassian mixture models
---

# Objective
The objective of predictive maintenance is quite easy to explain: It is to predict when a machine or a component will fail or not. This makes it possible to move from a preventive maintenance approach to a predictive maintenance approach. This approach is more efficient because it allows to avoid unnecessary maintenance operations and to anticipate the failures of the machines. This approach is also more economical because it allows to avoid the immobilization of the machines for maintenance operations that are not necessary. The hard part of predictive maintenance is to get label, `fail = yes` and `fail = no` as well as the `when`. It sounds quite obvious, but, normally the maintenance schedule is organized in such a way, that the failure does not occur between the checks. 
In my current work, we have a lot of data, but we do not have the labels. So, we have to find a way to get the labels. In this post, I will show you how I did it.

Imagine you have a heating-ventilation-and-air-conditioning (HVAC) system. Normally, this system consists of several interconnected subsystems such as ventilation, heat-exchanger unit etc. Each of these subsystems consists of several components such as fans, pumps, valves, heat exchangers etc. Each of these components has a specific function and is subject to wear and tear. The wear and tear of these components can lead to a failure of the component. The failure of a component can lead to the failure of the subsystem. The failure of a subsystem can lead to the failure of the HVAC system. The failure of the HVAC leads to discomfort of the passengers. However, is it possible to predict the `when` based on historical data? 

The important question is how to do it. In data science jargon, which variables lead to this state? What can be measured? One could measure the temperature of the air, the temperature of the water, the pressure of the air, the pressure of the water, the flow of the air, the flow of the water, the speed of the fans, the speed of the pumps, the position of the valves, the position of the dampers, the power consumption of the fans, the power consumption of the pumps, the power consumption of the heat exchangers, the power consumption of the HVAC system... The most obvious technique is to concentrate on the power consumption and treat the subsystems etc. as detail information. This is what we did. 

We used Gaussian-Mixture-Models^[<https://en.wikipedia.org/wiki/Mixture_model>] to try to find a pattern which deviates from the normal behavior. The normal behavior corresponds to the historical data obtained by energy counters and lies with the distribution. 

```{python}
import pandas as pd
import sklearn.mixture as mix
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import make_blobs

# Generate data
X, y = make_blobs(
    n_samples=100*60*24*7, 
    centers=3, 
    n_features=2,
    random_state=0
)

```